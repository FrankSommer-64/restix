#!/bin/bash

# Erzeugt ein zip-Archiv f√ºr die manuelle restix-Installation.
# build_zip <Version> <Feature-Set>

TEMP_DIR=/tmp/build_restix_py_zip

if [ "$SW_PROJECTS_ROOT" == "" ]; then
  SW_PROJECTS_ROOT=$HOME/GITROOT/sw/projects
fi
PROJECT_DIR=$SW_PROJECTS_ROOT/restix
BUILD_DIR=$PROJECT_DIR/build
DIST_DIR=$PROJECT_DIR/dist

if [ "$1" == "" ]; then
  echo "build_zip <Version> <Feature-Set>"
  exit 1
fi
VERSION=$1

rm -rf $TEMP_DIR
mkdir $TEMP_DIR

if [ "$2" == "full" ]; then
  cp $DIST_DIR/restix-$VERSION-py3-none-any.whl $TEMP_DIR
  cp $BUILD_DIR/bin/install_full.sh $TEMP_DIR/install.sh
  cp $BUILD_DIR/featuresets/full/deb/data/opt/restix/* $TEMP_DIR
  cp $BUILD_DIR/featuresets/full/deb/data/opt/restix/* $TEMP_DIR
  cp $BUILD_DIR/featuresets/full/deb/data/usr/local/share/applications/grestix.desktop $TEMP_DIR
  ARCHIVE_FILE=restix-$VERSION.zip
elif [ "$2" == "core" ]; then
  cp $DIST_DIR/restix_core-$VERSION-py3-none-any.whl $TEMP_DIR
  cp $BUILD_DIR/bin/install_core.sh $TEMP_DIR/install.sh
  cp $BUILD_DIR/featuresets/core/deb/data/opt/restix/* $TEMP_DIR
  ARCHIVE_FILE=restix_core-$VERSION.zip
else
  echo "Feature-Set muss full oder core sein"
  exit 1
fi

cd $TEMP_DIR
zip $ARCHIVE_FILE *
mv $ARCHIVE_FILE $DIST_DIR
